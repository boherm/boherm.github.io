---
import { type CollectionEntry } from 'astro:content';
import ArrowRight from '../icons/ArrowRight.astro';
import { getCollection } from 'astro:content';

type Props = { serie: CollectionEntry<'series'>; class?: string; };

const { serie, class: className } = Astro.props;
const { title, description, image } = serie.data;
const posts = (await getCollection('blog'))
    .filter((post) => post.data.serie?.id === serie.slug)
    .sort((a, b) => a.data.serie.part - b.data.serie.part);

const firstPost = posts[0];
const firstPostUrl = firstPost && !firstPost.data.draft ? `/blog/${firstPost?.slug}/` : '#';
---

<a class:list={['flex justify-between items-start gap-8 group', className]} href={firstPostUrl}>
    <div class="grow flex gap-5">
        {image && <img src={image.src} alt={image.alt} class="w-[100px] h-[100px] md:w-[150px] md:h-[150px]" />}
        <div>
            <h2
                class="text-xl leading-tight font-serif font-medium group-hover:underline group-hover:decoration-dashed group-hover:underline-offset-4 group-hover:decoration-1 sm:text-2xl"
            >
                {title}
            </h2>
            {posts.length > 0 && (
                <div class="mt-3 text-sm leading-normal">{posts.length} article{posts.length > 1 && "s"} à lire</div>
            )}
            {posts.length == 0 && (
                <div class="mt-3 text-sm leading-normal sm:hidden">Bientôt disponible</div>
            )}
            {description && <div class="mt-3 text-sm leading-normal">{description}</div>}
        </div>
    </div>
    <div class="hidden font-serif italic opacity-0 transition group-hover:opacity-100 sm:inline-flex sm:gap-1 sm:items-center sm:shrink-0">
        {firstPostUrl === '#' && 'Bientôt disponible'}
        {firstPostUrl !== '#' && (
        <span class="sm:inline-flex sm:gap-1 sm:items-center sm:shrink-0">Lire la série <ArrowRight class="fill-current w-4 h-4" /></span>
        )}
    </div>
</a>
